# Content 

*A Friendly Guide from Numbers to Neural Networks*

- [Download PDF](https://github.com/little-book-of/algorithms/blob/main/releases/book.pdf) - print-ready
- [Download EPUB](https://github.com/little-book-of/algorithms/blob/main/releases/book.epub) - e-reader friendly
- [View LaTex](https://github.com/little-book-of/algorithms/blob/main/releases/book.tex) - `.tex` source
- [Source code (Github)](https://github.com/little-book-of/algorithms) - Markdown source
- [Read on GitHub Pages](https://little-book-of.github.io/algorithms) - view online

Licensed under **CC BY-NC-SA 4.0**.

#### Chapter 1. Foundations of Algorithms
- 1. What Is an Algorithm?  
- 2. Measuring Time and Space  
- 3. Big-O, Big-Theta, Big-Omega  
- 4. Algorithmic Paradigms (Greedy, Divide and Conquer, DP)  
- 5. Recurrence Relations  
- 6. Searching Basics  
- 7. Sorting Basics  
- 8. Data Structures Overview  
- 9. Graphs and Trees Overview  
- 10. Algorithm Design Patterns  

#### Chapter 2. Sorting and Searching
- 11. Elementary Sorting (Bubble, Insertion, Selection)  
- 12. Divide-and-Conquer Sorting (Merge, Quick, Heap)  
- 13. Counting and Distribution Sorts (Counting, Radix, Bucket)  
- 14. Hybrid Sorts (IntroSort, Timsort)  
- 15. Special Sorts (Cycle, Gnome, Comb, Pancake)  
- 16. Linear and Binary Search  
- 17. Interpolation and Exponential Search  
- 18. Selection Algorithms (Quickselect, Median of Medians)  
- 19. Range Searching and Nearest Neighbor  
- 20. Search Optimizations and Variants  

#### Chapter 3. Data Structures in Action
- 21. Arrays, Linked Lists, Stacks, Queues  
- 22. Hash Tables and Variants (Cuckoo, Robin Hood, Consistent)  
- 23. Heaps (Binary, Fibonacci, Pairing)  
- 24. Balanced Trees (AVL, Red-Black, Splay, Treap)  
- 25. Segment Trees and Fenwick Trees  
- 26. Disjoint Set Union (Union-Find)  
- 27. Probabilistic Data Structures (Bloom, Count-Min, HyperLogLog)  
- 28. Skip Lists and B-Trees  
- 29. Persistent and Functional Data Structures  
- 30. Advanced Trees and Range Queries  

#### Chapter 4. Graph Algorithms
- 31. Traversals (DFS, BFS, Iterative Deepening)  
- 32. Strongly Connected Components (Tarjan, Kosaraju)  
- 33. Shortest Paths (Dijkstra, Bellman-Ford, A*, Johnson)  
- 34. Shortest Path Variants (0–1 BFS, Bidirectional, Heuristic A*)  
- 35. Minimum Spanning Trees (Kruskal, Prim, Borůvka)  
- 36. Flows (Ford–Fulkerson, Edmonds–Karp, Dinic)  
- 37. Cuts (Stoer–Wagner, Karger, Gomory–Hu)  
- 38. Matchings (Hopcroft–Karp, Hungarian, Blossom)  
- 39. Tree Algorithms (LCA, HLD, Centroid Decomposition)  
- 40. Advanced Graph Algorithms and Tricks  

#### Chapter 5. Dynamic Programming
- 41. DP Basics and State Transitions  
- 42. Classic Problems (Knapsack, Subset Sum, Coin Change)  
- 43. Sequence Problems (LIS, LCS, Edit Distance)  
- 44. Matrix and Chain Problems  
- 45. Bitmask DP and Traveling Salesman  
- 46. Digit DP and SOS DP  
- 47. DP Optimizations (Divide & Conquer, Convex Hull Trick, Knuth)  
- 48. Tree DP and Rerooting  
- 49. DP Reconstruction and Traceback  
- 50. Meta-DP and Optimization Templates  

#### Chapter 6. Mathematics for Algorithms
- 51. Number Theory (GCD, Modular Arithmetic, CRT)  
- 52. Primality and Factorization (Miller–Rabin, Pollard Rho)  
- 53. Combinatorics (Permutations, Combinations, Subsets)  
- 54. Probability and Randomized Algorithms  
- 55. Sieve Methods and Modular Math  
- 56. Linear Algebra (Gaussian Elimination, LU, SVD)  
- 57. FFT and NTT (Fast Transforms)  
- 58. Numerical Methods (Newton, Simpson, Runge–Kutta)  
- 59. Mathematical Optimization (Simplex, Gradient, Convex)  
- 60. Algebraic Tricks and Transform Techniques  

#### Chapter 7. Strings and Text Algorithms
- 61. String Matching (KMP, Z, Rabin–Karp, Boyer–Moore)  
- 62. Multi-Pattern Search (Aho–Corasick)  
- 63. Suffix Structures (Suffix Array, Suffix Tree, LCP)  
- 64. Palindromes and Periodicity (Manacher)  
- 65. Edit Distance and Alignment  
- 66. Compression (Huffman, Arithmetic, LZ77, BWT)  
- 67. Cryptographic Hashes and Checksums  
- 68. Approximate and Streaming Matching  
- 69. Bioinformatics Alignment (Needleman–Wunsch, Smith–Waterman)  
- 70. Text Indexing and Search Structures  

#### Chapter 8. Geometry, Graphics, and Spatial Algorithms
- 71. Convex Hull (Graham, Andrew, Chan)  
- 72. Closest Pair and Segment Intersection  
- 73. Line Sweep and Plane Sweep Algorithms  
- 74. Delaunay and Voronoi Diagrams  
- 75. Point in Polygon and Polygon Triangulation  
- 76. Spatial Data Structures (KD, R-tree)  
- 77. Rasterization and Scanline Techniques  
- 78. Computer Vision (Canny, Hough, SIFT)  
- 79. Pathfinding in Space (A*, RRT, PRM)  
- 80. Computational Geometry Variants and Applications  

#### Chapter 9. Systems, Databases, and Distributed Algorithms
- 81. Concurrency Control (2PL, MVCC, OCC)  
- 82. Logging, Recovery, and Commit Protocols  
- 83. Scheduling (Round Robin, EDF, Rate-Monotonic)  
- 84. Caching and Replacement (LRU, LFU, CLOCK)  
- 85. Networking (Routing, Congestion Control)  
- 86. Distributed Consensus (Paxos, Raft, PBFT)  
- 87. Load Balancing and Rate Limiting  
- 88. Search and Indexing (Inverted, BM25, WAND)  
- 89. Compression and Encoding in Systems  
- 90. Fault Tolerance and Replication  

#### Chapter 10. AI, ML, and Optimization
- 91. Classical ML (k-means, Naive Bayes, SVM, Decision Trees)  
- 92. Ensemble Methods (Bagging, Boosting, Random Forests)  
- 93. Gradient Methods (SGD, Adam, RMSProp)  
- 94. Deep Learning (Backpropagation, Dropout, Normalization)  
- 95. Sequence Models (Viterbi, Beam Search, CTC)  
- 96. Metaheuristics (GA, SA, PSO, ACO)  
- 97. Reinforcement Learning (Q-learning, Policy Gradients)  
- 98. Approximation and Online Algorithms  
- 99. Fairness, Causal Inference, and Robust Optimization  
- 100. AI Planning, Search, and Learning Systems  
